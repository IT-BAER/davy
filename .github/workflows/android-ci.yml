name: Development tests

on:
  push:
    branches: [ main ]
  pull_request:

# Cancel in-progress runs for same workflow and PR/branch
concurrency:
  group: test-dev-${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile:
    name: Compile for build cache
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          dependency-graph: generate-and-submit  # Submit GitHub Dependency Graph

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Compile debug sources
        run: ./gradlew --build-cache --configuration-cache app:compileDebugSources

  lint:
    name: Lint & Code Quality
    needs: compile
    if: ${{ !cancelled() }}  # Run even if compile didn't run
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: true

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Android Lint
        run: ./gradlew --build-cache --configuration-cache lintDebug

      - name: Run ktlint
        run: ./gradlew --build-cache --configuration-cache ktlintCheck
        continue-on-error: true

      - name: Run Detekt
        run: ./gradlew --build-cache --configuration-cache detekt
        continue-on-error: true

      - name: Upload Lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: |
            app/build/reports/lint-results-debug.html
            app/build/reports/detekt/
          retention-days: 14

  test:
    name: Unit Tests
    needs: compile
    if: ${{ !cancelled() }}  # Run even if compile didn't run
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew --build-cache --configuration-cache testDebugUnitTest --stacktrace

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/test-results/testDebugUnitTest/
          retention-days: 14

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'app/build/test-results/testDebugUnitTest/TEST-*.xml'
          check_name: 'Unit Test Results'

  build:
    name: Build APK
    needs: [lint, test]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    strategy:
      matrix:
        variant: [debug]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build ${{ matrix.variant }} APK
        run: ./gradlew --build-cache --configuration-cache assemble${{ matrix.variant == 'debug' && 'Debug' || 'Release' }}

      - name: Upload ${{ matrix.variant }} APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}-apk
          path: app/build/outputs/apk/${{ matrix.variant }}/*.apk
          retention-days: 30

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
