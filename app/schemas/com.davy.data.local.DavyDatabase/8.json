{
  "formatVersion": 1,
  "database": {
    "version": 8,
    "identityHash": "07c74afd20f9fd3631e43cae2b818305",
    "entities": [
      {
        "tableName": "accounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `account_name` TEXT NOT NULL, `server_url` TEXT NOT NULL, `username` TEXT NOT NULL, `display_name` TEXT, `email` TEXT, `calendar_enabled` INTEGER NOT NULL, `contacts_enabled` INTEGER NOT NULL, `tasks_enabled` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `last_authenticated_at` INTEGER, `auth_type` TEXT NOT NULL, `certificate_fingerprint` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountName",
            "columnName": "account_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "serverUrl",
            "columnName": "server_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "display_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "calendarEnabled",
            "columnName": "calendar_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contactsEnabled",
            "columnName": "contacts_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tasksEnabled",
            "columnName": "tasks_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastAuthenticatedAt",
            "columnName": "last_authenticated_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "authType",
            "columnName": "auth_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "certificateFingerprint",
            "columnName": "certificate_fingerprint",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "sync_configurations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `account_id` INTEGER NOT NULL, `sync_interval_minutes` INTEGER NOT NULL, `wifi_only_sync` INTEGER NOT NULL, `sync_calendars` INTEGER NOT NULL, `sync_contacts` INTEGER NOT NULL, `sync_tasks` INTEGER NOT NULL, `sync_in_background` INTEGER NOT NULL, `conflict_resolution_strategy` TEXT NOT NULL, `max_retries` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`account_id`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "account_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncIntervalMinutes",
            "columnName": "sync_interval_minutes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wifiOnlySync",
            "columnName": "wifi_only_sync",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncCalendars",
            "columnName": "sync_calendars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncContacts",
            "columnName": "sync_contacts",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncTasks",
            "columnName": "sync_tasks",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncInBackground",
            "columnName": "sync_in_background",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "conflictResolutionStrategy",
            "columnName": "conflict_resolution_strategy",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxRetries",
            "columnName": "max_retries",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_sync_configurations_account_id",
            "unique": true,
            "columnNames": [
              "account_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_sync_configurations_account_id` ON `${TABLE_NAME}` (`account_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "sync_status",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `account_id` INTEGER NOT NULL, `resource_type` TEXT NOT NULL, `last_sync_timestamp` INTEGER, `last_sync_result` TEXT NOT NULL, `last_sync_token` TEXT, `currently_syncing` INTEGER NOT NULL, `sync_started_at` INTEGER, `items_synced` INTEGER NOT NULL, `error_message` TEXT, `retry_count` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`account_id`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "account_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resourceType",
            "columnName": "resource_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastSyncTimestamp",
            "columnName": "last_sync_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastSyncResult",
            "columnName": "last_sync_result",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastSyncToken",
            "columnName": "last_sync_token",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "currentlySyncing",
            "columnName": "currently_syncing",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncStartedAt",
            "columnName": "sync_started_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "itemsSynced",
            "columnName": "items_synced",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorMessage",
            "columnName": "error_message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "retryCount",
            "columnName": "retry_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_sync_status_account_id",
            "unique": false,
            "columnNames": [
              "account_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_sync_status_account_id` ON `${TABLE_NAME}` (`account_id`)"
          },
          {
            "name": "index_sync_status_account_id_resource_type",
            "unique": true,
            "columnNames": [
              "account_id",
              "resource_type"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_sync_status_account_id_resource_type` ON `${TABLE_NAME}` (`account_id`, `resource_type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "calendars",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `accountId` INTEGER NOT NULL, `calendarUrl` TEXT NOT NULL, `displayName` TEXT NOT NULL, `color` INTEGER NOT NULL, `description` TEXT, `timezone` TEXT, `visible` INTEGER NOT NULL, `syncEnabled` INTEGER NOT NULL, `androidCalendarId` INTEGER, `syncToken` TEXT, `owner` TEXT, `privWriteContent` INTEGER NOT NULL, `privUnbind` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `lastSyncedAt` INTEGER, FOREIGN KEY(`accountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "calendarUrl",
            "columnName": "calendarUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timezone",
            "columnName": "timezone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "visible",
            "columnName": "visible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncEnabled",
            "columnName": "syncEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "androidCalendarId",
            "columnName": "androidCalendarId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "syncToken",
            "columnName": "syncToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner",
            "columnName": "owner",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privWriteContent",
            "columnName": "privWriteContent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "privUnbind",
            "columnName": "privUnbind",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastSyncedAt",
            "columnName": "lastSyncedAt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_calendars_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_calendars_accountId` ON `${TABLE_NAME}` (`accountId`)"
          },
          {
            "name": "index_calendars_calendarUrl",
            "unique": true,
            "columnNames": [
              "calendarUrl"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_calendars_calendarUrl` ON `${TABLE_NAME}` (`calendarUrl`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "calendar_events",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `calendarId` INTEGER NOT NULL, `eventUrl` TEXT NOT NULL, `uid` TEXT NOT NULL, `title` TEXT NOT NULL, `description` TEXT, `location` TEXT, `dtStart` INTEGER NOT NULL, `dtEnd` INTEGER NOT NULL, `allDay` INTEGER NOT NULL, `timezone` TEXT, `status` TEXT, `availability` TEXT, `rrule` TEXT, `rdate` TEXT, `exdate` TEXT, `recurrenceId` TEXT, `originalEventId` INTEGER, `organizer` TEXT, `attendeesJson` TEXT, `remindersJson` TEXT, `etag` TEXT, `androidEventId` INTEGER, `dirty` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `deletedAt` INTEGER, FOREIGN KEY(`calendarId`) REFERENCES `calendars`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "calendarId",
            "columnName": "calendarId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "eventUrl",
            "columnName": "eventUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dtStart",
            "columnName": "dtStart",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dtEnd",
            "columnName": "dtEnd",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allDay",
            "columnName": "allDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timezone",
            "columnName": "timezone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "availability",
            "columnName": "availability",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rrule",
            "columnName": "rrule",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rdate",
            "columnName": "rdate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "exdate",
            "columnName": "exdate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "recurrenceId",
            "columnName": "recurrenceId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "originalEventId",
            "columnName": "originalEventId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "organizer",
            "columnName": "organizer",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attendeesJson",
            "columnName": "attendeesJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remindersJson",
            "columnName": "remindersJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "etag",
            "columnName": "etag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "androidEventId",
            "columnName": "androidEventId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dirty",
            "columnName": "dirty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deletedAt",
            "columnName": "deletedAt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_calendar_events_calendarId",
            "unique": false,
            "columnNames": [
              "calendarId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_calendar_events_calendarId` ON `${TABLE_NAME}` (`calendarId`)"
          },
          {
            "name": "index_calendar_events_eventUrl",
            "unique": true,
            "columnNames": [
              "eventUrl"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_calendar_events_eventUrl` ON `${TABLE_NAME}` (`eventUrl`)"
          },
          {
            "name": "index_calendar_events_androidEventId",
            "unique": false,
            "columnNames": [
              "androidEventId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_calendar_events_androidEventId` ON `${TABLE_NAME}` (`androidEventId`)"
          },
          {
            "name": "index_calendar_events_dtStart",
            "unique": false,
            "columnNames": [
              "dtStart"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_calendar_events_dtStart` ON `${TABLE_NAME}` (`dtStart`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "calendars",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "calendarId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "address_books",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `account_id` INTEGER NOT NULL, `url` TEXT NOT NULL, `display_name` TEXT NOT NULL, `description` TEXT, `color` INTEGER NOT NULL, `ctag` TEXT, `sync_enabled` INTEGER NOT NULL, `visible` INTEGER NOT NULL, `android_account_name` TEXT, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `owner` TEXT, `priv_write_content` INTEGER NOT NULL DEFAULT 1, FOREIGN KEY(`account_id`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "account_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "display_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ctag",
            "columnName": "ctag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "syncEnabled",
            "columnName": "sync_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "visible",
            "columnName": "visible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "androidAccountName",
            "columnName": "android_account_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "owner",
            "columnName": "owner",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "privWriteContent",
            "columnName": "priv_write_content",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_address_books_account_id",
            "unique": false,
            "columnNames": [
              "account_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_address_books_account_id` ON `${TABLE_NAME}` (`account_id`)"
          },
          {
            "name": "index_address_books_url",
            "unique": true,
            "columnNames": [
              "url"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_address_books_url` ON `${TABLE_NAME}` (`url`)"
          },
          {
            "name": "index_address_books_android_account_name",
            "unique": false,
            "columnNames": [
              "android_account_name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_address_books_android_account_name` ON `${TABLE_NAME}` (`android_account_name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "contacts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `address_book_id` INTEGER NOT NULL, `uid` TEXT NOT NULL, `contact_url` TEXT, `etag` TEXT, `display_name` TEXT NOT NULL, `given_name` TEXT, `family_name` TEXT, `middle_name` TEXT, `name_prefix` TEXT, `name_suffix` TEXT, `nickname` TEXT, `organization` TEXT, `organization_unit` TEXT, `job_title` TEXT, `phone_numbers` TEXT, `emails` TEXT, `postal_addresses` TEXT, `websites` TEXT, `note` TEXT, `birthday` TEXT, `anniversary` TEXT, `photo_base64` TEXT, `is_dirty` INTEGER NOT NULL, `is_deleted` INTEGER NOT NULL, `android_contact_id` INTEGER, `android_raw_contact_id` INTEGER, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, FOREIGN KEY(`address_book_id`) REFERENCES `address_books`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addressBookId",
            "columnName": "address_book_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contactUrl",
            "columnName": "contact_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "etag",
            "columnName": "etag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "displayName",
            "columnName": "display_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "givenName",
            "columnName": "given_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "familyName",
            "columnName": "family_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "middleName",
            "columnName": "middle_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "namePrefix",
            "columnName": "name_prefix",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nameSuffix",
            "columnName": "name_suffix",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nickname",
            "columnName": "nickname",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "organization",
            "columnName": "organization",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "organizationUnit",
            "columnName": "organization_unit",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "jobTitle",
            "columnName": "job_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNumbers",
            "columnName": "phone_numbers",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "emails",
            "columnName": "emails",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "postalAddresses",
            "columnName": "postal_addresses",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "websites",
            "columnName": "websites",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "birthday",
            "columnName": "birthday",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "anniversary",
            "columnName": "anniversary",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photoBase64",
            "columnName": "photo_base64",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isDirty",
            "columnName": "is_dirty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDeleted",
            "columnName": "is_deleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "androidContactId",
            "columnName": "android_contact_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "androidRawContactId",
            "columnName": "android_raw_contact_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_contacts_address_book_id",
            "unique": false,
            "columnNames": [
              "address_book_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_address_book_id` ON `${TABLE_NAME}` (`address_book_id`)"
          },
          {
            "name": "index_contacts_uid",
            "unique": false,
            "columnNames": [
              "uid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_uid` ON `${TABLE_NAME}` (`uid`)"
          },
          {
            "name": "index_contacts_contact_url",
            "unique": true,
            "columnNames": [
              "contact_url"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_contacts_contact_url` ON `${TABLE_NAME}` (`contact_url`)"
          },
          {
            "name": "index_contacts_is_dirty",
            "unique": false,
            "columnNames": [
              "is_dirty"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_is_dirty` ON `${TABLE_NAME}` (`is_dirty`)"
          },
          {
            "name": "index_contacts_is_deleted",
            "unique": false,
            "columnNames": [
              "is_deleted"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_is_deleted` ON `${TABLE_NAME}` (`is_deleted`)"
          },
          {
            "name": "index_contacts_android_contact_id",
            "unique": false,
            "columnNames": [
              "android_contact_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_android_contact_id` ON `${TABLE_NAME}` (`android_contact_id`)"
          },
          {
            "name": "index_contacts_android_raw_contact_id",
            "unique": false,
            "columnNames": [
              "android_raw_contact_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_contacts_android_raw_contact_id` ON `${TABLE_NAME}` (`android_raw_contact_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "address_books",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "address_book_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "task_lists",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `account_id` INTEGER NOT NULL, `url` TEXT NOT NULL, `display_name` TEXT NOT NULL, `color` TEXT, `ctag` TEXT, `sync_enabled` INTEGER NOT NULL, `visible` INTEGER NOT NULL, `last_synced` INTEGER, FOREIGN KEY(`account_id`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "account_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "display_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ctag",
            "columnName": "ctag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "syncEnabled",
            "columnName": "sync_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "visible",
            "columnName": "visible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastSynced",
            "columnName": "last_synced",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_task_lists_account_id",
            "unique": false,
            "columnNames": [
              "account_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_task_lists_account_id` ON `${TABLE_NAME}` (`account_id`)"
          },
          {
            "name": "index_task_lists_url",
            "unique": true,
            "columnNames": [
              "url"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_task_lists_url` ON `${TABLE_NAME}` (`url`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "tasks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `task_list_id` INTEGER NOT NULL, `url` TEXT NOT NULL, `uid` TEXT NOT NULL, `etag` TEXT, `summary` TEXT NOT NULL, `description` TEXT, `status` TEXT, `priority` INTEGER, `percent_complete` INTEGER, `due` INTEGER, `dt_start` INTEGER, `completed` INTEGER, `created` INTEGER, `last_modified` INTEGER, `rrule` TEXT, `parent_task_id` INTEGER, `location` TEXT, `categories` TEXT, `dirty` INTEGER NOT NULL, `deleted` INTEGER NOT NULL, FOREIGN KEY(`task_list_id`) REFERENCES `task_lists`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`parent_task_id`) REFERENCES `tasks`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "taskListId",
            "columnName": "task_list_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "etag",
            "columnName": "etag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "percentComplete",
            "columnName": "percent_complete",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "due",
            "columnName": "due",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dtStart",
            "columnName": "dt_start",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "completed",
            "columnName": "completed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastModified",
            "columnName": "last_modified",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rrule",
            "columnName": "rrule",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentTaskId",
            "columnName": "parent_task_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "categories",
            "columnName": "categories",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dirty",
            "columnName": "dirty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_tasks_task_list_id",
            "unique": false,
            "columnNames": [
              "task_list_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_task_list_id` ON `${TABLE_NAME}` (`task_list_id`)"
          },
          {
            "name": "index_tasks_url",
            "unique": true,
            "columnNames": [
              "url"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_tasks_url` ON `${TABLE_NAME}` (`url`)"
          },
          {
            "name": "index_tasks_uid",
            "unique": false,
            "columnNames": [
              "uid"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_uid` ON `${TABLE_NAME}` (`uid`)"
          },
          {
            "name": "index_tasks_parent_task_id",
            "unique": false,
            "columnNames": [
              "parent_task_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_parent_task_id` ON `${TABLE_NAME}` (`parent_task_id`)"
          },
          {
            "name": "index_tasks_dirty",
            "unique": false,
            "columnNames": [
              "dirty"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_dirty` ON `${TABLE_NAME}` (`dirty`)"
          },
          {
            "name": "index_tasks_deleted",
            "unique": false,
            "columnNames": [
              "deleted"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_deleted` ON `${TABLE_NAME}` (`deleted`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "task_lists",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "task_list_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "tasks",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "parent_task_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "webcal_subscription",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `account_id` INTEGER NOT NULL, `subscription_url` TEXT NOT NULL, `display_name` TEXT NOT NULL, `color` INTEGER NOT NULL, `description` TEXT, `sync_enabled` INTEGER NOT NULL, `visible` INTEGER NOT NULL, `android_calendar_id` INTEGER, `etag` TEXT, `refresh_interval_minutes` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `last_synced_at` INTEGER, `last_sync_error` TEXT, FOREIGN KEY(`account_id`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "account_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subscriptionUrl",
            "columnName": "subscription_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "display_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "syncEnabled",
            "columnName": "sync_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "visible",
            "columnName": "visible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "androidCalendarId",
            "columnName": "android_calendar_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "etag",
            "columnName": "etag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "refreshIntervalMinutes",
            "columnName": "refresh_interval_minutes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastSyncedAt",
            "columnName": "last_synced_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastSyncError",
            "columnName": "last_sync_error",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_webcal_subscription_account_id",
            "unique": false,
            "columnNames": [
              "account_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_webcal_subscription_account_id` ON `${TABLE_NAME}` (`account_id`)"
          },
          {
            "name": "index_webcal_subscription_subscription_url",
            "unique": true,
            "columnNames": [
              "subscription_url"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_webcal_subscription_subscription_url` ON `${TABLE_NAME}` (`subscription_url`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "account_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '07c74afd20f9fd3631e43cae2b818305')"
    ]
  }
}